{"version":3,"file":"content/content.js","mappings":";;;;AAAA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AACA;;AAEA;AACA;AACA;;AAEA","sources":["webpack://revisewise-extension/./src/content/content.js"],"sourcesContent":["// Basic content script\nconsole.log('ReviseWise: Content script loaded');\n\n// Create and inject styles\nconst style = document.createElement('style');\nstyle.textContent = `\n  .revisewise-container {\n    position: fixed;\n    right: 20px;\n    top: 20px;\n    width: 350px;\n    background: white;\n    box-shadow: 0 4px 15px rgba(91, 79, 219, 0.1);\n    border-radius: 12px;\n    border: 1px solid #5B4FDB;\n    z-index: 2147483647;\n    font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;\n    opacity: 0;\n    transform: translateY(-10px);\n    transition: opacity 0.3s, transform 0.3s;\n  }\n\n  .revisewise-container.visible {\n    opacity: 1;\n    transform: translateY(0);\n  }\n\n  .revisewise-header {\n    padding: 12px 16px;\n    background: #5B4FDB;\n    color: white;\n    border-radius: 12px 12px 0 0;\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n  }\n\n  .revisewise-title {\n    font-size: 14px;\n    font-weight: 500;\n    color: white;\n    margin: 0;\n    display: flex;\n    align-items: center;\n    gap: 8px;\n  }\n\n  .revisewise-close {\n    padding: 4px;\n    background: none;\n    border: none;\n    cursor: pointer;\n    color: #6b7280;\n    border-radius: 4px;\n  }\n\n  .revisewise-close:hover {\n    background: #f3f4f6;\n  }\n\n  .revisewise-content {\n    padding: 16px;\n    max-height: 400px;\n    overflow-y: auto;\n    font-size: 14px;\n    line-height: 1.5;\n    color: #374151;\n  }\n\n  .revisewise-loading {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    padding: 20px;\n    color: #6b7280;\n  }\n\n  .revisewise-error {\n    padding: 12px;\n    background: #fef2f2;\n    color: #dc2626;\n    border-radius: 4px;\n    margin: 8px;\n    font-size: 13px;\n  }\n\n  @keyframes spin {\n    to { transform: rotate(360deg); }\n  }\n\n  .revisewise-spinner {\n    width: 20px;\n    height: 20px;\n    border: 2px solid #e5e7eb;\n    border-top-color: #2563eb;\n    border-radius: 50%;\n    animation: spin 0.8s linear infinite;\n    margin-right: 8px;\n  }\n\n  .revisewise-metadata {\n    margin-top: 16px;\n    padding: 12px;\n    background: #f8f7ff;\n    border-radius: 8px;\n    font-size: 12px;\n  }\n\n  .metadata-item {\n    display: flex;\n    justify-content: space-between;\n    margin-bottom: 4px;\n  }\n\n  .metadata-item .label {\n    color: #9ca3af;\n  }\n\n  .metadata-item .value {\n    font-weight: 500;\n    color: #4b5563;\n  }\n`;\n\ndocument.head.appendChild(style);\n\nclass ReviseWiseUI {\n  constructor() {\n    this.container = null;\n    this.createContainer();\n  }\n\n  createContainer() {\n    this.container = document.createElement('div');\n    this.container.className = 'revisewise-container';\n    this.container.innerHTML = `\n      <div class=\"revisewise-header\">\n        <h3 class=\"revisewise-title\">ReviseWise Explanation</h3>\n        <button class=\"revisewise-close\">Ã—</button>\n      </div>\n      <div class=\"revisewise-content\"></div>\n    `;\n\n    document.body.appendChild(this.container);\n\n    // Add event listeners\n    this.container.querySelector('.revisewise-close').addEventListener('click', () => {\n      this.hide();\n    });\n  }\n\n  show() {\n    this.container.classList.add('visible');\n  }\n\n  hide() {\n    this.container.classList.remove('visible');\n  }\n\n  setContent(content) {\n    const contentEl = this.container.querySelector('.revisewise-content');\n    contentEl.innerHTML = content;\n    this.show();\n  }\n\n  showLoading() {\n    this.setContent(`\n      <div class=\"revisewise-loading\">\n        <div class=\"revisewise-spinner\"></div>\n        <span>Getting your explanation...</span>\n      </div>\n    `);\n    this.show();\n  }\n\n  showError(message) {\n    this.setContent(`\n      <div class=\"revisewise-error\">\n        ${message}\n      </div>\n    `);\n    this.show();\n  }\n}\n\n// Initialize UI\nlet ui = null;\n\nfunction initializeUI() {\n  if (!ui) {\n    ui = new ReviseWiseUI();\n    console.log('ReviseWise UI initialized');\n  }\n  return ui;\n}\n\n// Initialize when the content script loads\ninitializeUI();\n\n// Listen for messages from background script\nchrome.runtime.onMessage.addListener((message, sender, sendResponse) => {\n  const uiInstance = initializeUI();\n  \n  try {\n    switch (message.type) {\n      case 'PING':\n        sendResponse({ status: 'ok' });\n        break;\n      case 'SHOW_LOADING':\n        uiInstance.showLoading();\n        break;\n      case 'SHOW_EXPLANATION':\n        uiInstance.setContent(message.payload);\n        break;\n      case 'SHOW_ERROR':\n        uiInstance.showError(message.payload);\n        break;\n      default:\n        console.warn('Unknown message type:', message.type);\n    }\n    sendResponse({ received: true });\n  } catch (error) {\n    console.error('Error handling message:', error);\n    sendResponse({ error: error.message });\n  }\n  \n  // Return true to indicate we'll send a response asynchronously\n  return true;\n});\n\n// This will be expanded later to handle text selection and interactions "],"names":[],"sourceRoot":""}